pipeline {
    agent any
    tools {
        jdk 'jdk17'
        nodejs 'nodejs16'
    }
    environment {
        SCANNER_HOME=tool 'mysonar'
    }

    stages {
        stage('cleanws') {
            steps {
                cleanWs()
            }
        }
        stage ('code') {
            steps {
                git 'https://github.com/Ram0314/k8s-project.git'
            }
        }
        stage ('qca') {
            steps {
                withSonarQubeEnv('mysonar') {
                    sh ''' $SCANNER_HOME/bin/sonar-scanner -Dsonar.projectName=zomato \
                    -Dsonar.projectKey=zomato '''
                }
            }
        }
        stage ('Quality gate') {
            steps {
                script {
                    waitForQualityGate abortPipeline: false, credentialsId: 'mysonar'
                }
            }
        }
         stage ('code build') {
            steps {
                sh 'npm install'
            }
         }
         stage ('OWASP') {
             steps {
                 dependencyCheck additionalArguments: '--scan ./ --disableYarnAudit --disableNodeAudit', odcInstallation: 'Dp-Check'
                 dependencyCheckPublisher pattern: '**/dependency-check-report.xml'
             }
         }
         stage ('build') {
             steps {
                 sh 'docker build -t reddy0314/images:v1 .'
             }
         }
         stage ('trivyFile') {
             steps {
                sh  'trivy fs . > trivyfs.txt'
             }
         }
         stage ('trivy scan') {
             steps {
                 sh 'trivy image reddy0314/images:v1'
             }
         }
         stage ('push') {
             steps {
                 sh 'docker push reddy0314/images:v1'
             }
         }
    }
    post {    
      always {
            echo "Stack Notifications"
            slackSend(channel: 'k8s',message: "${currentBuild.currentResult}: Job ${env.JOB_NAME} \nBuild Number: ${env.BUILD_NUMBER}\nMore info at: ${env.BUILD_URL}")
      }
    }
}
